name: Docker publish

on:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-amd64:
    name: Build amd64
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Log in to Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest

      - name: Download and modify MediaWiki Dockerfile
        run: |
          curl -o Dockerfile.mediawiki https://raw.githubusercontent.com/wikimedia/mediawiki-docker/refs/heads/main/1.43/fpm/Dockerfile
          sed -i 's/FROM php:8\.[0-9]\+-fpm/FROM php:8.4-fpm/' Dockerfile.mediawiki

      - name: Build and push MediaWiki base to local registry
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.mediawiki
          platforms: linux/amd64
          push: true
          tags: localhost:5000/mediawiki-php84:1.43-fpm

      - name: Build and push Docker image for amd64
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          build-args: |
            BASE_IMAGE=localhost:5000/mediawiki-php84:1.43-fpm
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-arm64:
    name: Build arm64
    runs-on: ubuntu-24.04-arm
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Log in to Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest

      - name: Download and modify MediaWiki Dockerfile
        run: |
          curl -o Dockerfile.mediawiki https://raw.githubusercontent.com/wikimedia/mediawiki-docker/refs/heads/main/1.43/fpm/Dockerfile
          sed -i 's/FROM php:8\.[0-9]\+-fpm/FROM php:8.4-fpm/' Dockerfile.mediawiki

      - name: Build and push MediaWiki base to local registry
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.mediawiki
          platforms: linux/arm64
          push: true
          tags: localhost:5000/mediawiki-php84:1.43-fpm

      - name: Build and push Docker image for arm64
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64
          push: true
          build-args: |
            BASE_IMAGE=localhost:5000/mediawiki-php84:1.43-fpm
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  merge:
    name: Create and push multi-arch manifest
    runs-on: ubuntu-latest
    needs:
      - build-amd64
      - build-arm64
    steps:
      - name: Log in to Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest

      - name: Create and push multi-arch manifest
        uses: int128/docker-manifest-create-action@v2
        with:
          tags: ${{ steps.meta.outputs.tags }}
          sources: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ needs.build-amd64.outputs.digest }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ needs.build-arm64.outputs.digest }}
